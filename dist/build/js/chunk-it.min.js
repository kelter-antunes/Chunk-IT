const uploader=function(){function t(){this.chunkSize=1048576,this.threadsQuantity=2,this.file=null,this.aborted=!1,this.uploadedSize=0,this.progressCache={},this.activeConnections={},this.uploadURL="",this.uploadSecret=""}t.prototype.setOptions=function(t={}){this.chunkSize=t.chunkSize,this.threadsQuantity=t.threadsQuantity,this.uploadURL=t.uploadURL,this.uploadSecret=t.uploadSecret},t.prototype.setupFile=function(t){t&&(this.file=t)},t.prototype.start=function(){if(!this.file)throw new Error("Can't start uploading: file have not chosen");const t=Math.ceil(this.file.size/this.chunkSize);this.chunksQueue=new Array(t).fill().map((t,e)=>e).reverse(),this.fileId=this.uuidv4(),this.sendNext()},t.prototype.sendNext=function(){const t=Object.keys(this.activeConnections).length;if(t>=this.threadsQuantity)return;if(!this.chunksQueue.length)return void(t||this.complete(null,{status:"Completed",FileId:this.fileId}));const e=this.chunksQueue.pop(),n=e*this.chunkSize,s=this.file.slice(n,n+this.chunkSize);this.sendChunk(s,e).then(()=>{this.sendNext()}).catch(t=>{this.chunksQueue.push(e),this.complete(t)}),this.sendNext()},t.prototype.complete=function(t,e){!t||this.aborted,this.end(t,e)},t.prototype.sendChunk=function(t,e){return new Promise(async(n,s)=>{try{const n=await this.upload(t,e),{status:i,size:o}=JSON.parse(n);if(200!==i||o!==t.size)return void s(new Error("Failed chunk upload"))}catch(t){return void s(t)}n()})},t.prototype.handleProgress=function(t,e){"progress"!==e.type&&"error"!==e.type&&"abort"!==e.type||(this.progressCache[t]=e.loaded),"loadend"===e.type&&(this.uploadedSize+=this.progressCache[t]||0,delete this.progressCache[t]);const n=Object.keys(this.progressCache).reduce((t,e)=>t+=this.progressCache[e],0),s=Math.min(this.uploadedSize+n,this.file.size);this.onProgress({loaded:s,total:this.file.size})},t.prototype.upload=function(t,e){return new Promise((n,s)=>{const i=this.activeConnections[e]=new XMLHttpRequest,o=this.handleProgress.bind(this,e);i.upload.addEventListener("progress",o),i.addEventListener("error",o),i.addEventListener("abort",o),i.addEventListener("loadend",o),i.open("post",this.uploadURL),i.setRequestHeader("ContentLength",t.size),i.setRequestHeader("XContentId",this.fileId),i.setRequestHeader("XChunkId",e),i.setRequestHeader("XSecret",this.uploadSecret),i.onreadystatechange=(t=>{4===i.readyState&&200===i.status&&(n(i.responseText),delete this.activeConnections[e])}),i.onerror=(t=>{s(t),delete this.activeConnections[e]}),i.onabort=(()=>{s(new Error("Upload canceled by user")),delete this.activeConnections[e]});var r=new FileReader;r.readAsDataURL(t),r.onloadend=function(){var t=r.result;i.send(t.substr(t.indexOf(",")+1))}})},t.prototype.on=function(t,e){"function"!=typeof e&&(e=(()=>{})),this[t]=e},t.prototype.abort=function(){Object.keys(this.activeConnections).forEach(t=>{this.activeConnections[t].abort()}),this.aborted=!0},t.prototype.uuidv4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)})};const e=new t;return{options:function(t){return e.setOptions(t),this},send:function(t){return e.setupFile(t),this},continue:function(){e.sendNext()},onProgress:function(t){return e.on("onProgress",t),this},end:function(t){return e.on("end",t),e.start(),this},abort:function(){e.abort()}}};